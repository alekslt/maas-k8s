#cloud-config
debconf_selections:
 maas: |
  {{for line in str(curtin_preseed).splitlines()}}
  {{line}}
  {{endfor}}
#  disable_reboot: touch /run/block-curtin-poweroff /tmp/block-poweroff /tmp/block-reboot
{{if third_party_drivers and driver}}
early_commands:
  {{py: key_string = ''.join(['\\x%x' % x for x in map(ord, driver['key_binary'])])}}
  driver_00_get_key: /bin/echo -en '{{key_string}}' > /tmp/maas-{{driver['package']}}.gpg
  driver_01_add_key: ["apt-key", "add", "/tmp/maas-{{driver['package']}}.gpg"]
  driver_02_add: ["add-apt-repository", "-y", "deb {{driver['repository']}} {{node.get_distro_series()}} main"]
  driver_03_update_install: ["sh", "-c", "apt-get update --quiet && apt-get --assume-yes install {{driver['package']}}"]
  driver_04_load: ["sh", "-c", "depmod && modprobe {{driver['module']}}"]
{{endif}}
late_commands:
  maas: [wget, '--no-proxy', {{node_disable_pxe_url|escape.json}}, '--post-data', {{node_disable_pxe_data|escape.json}}, '-O', '/dev/null']
{{if third_party_drivers and driver}}
  driver_00_key_get: curtin in-target -- sh -c "/bin/echo -en '{{key_string}}' > /tmp/maas-{{driver['package']}}.gpg"
  driver_02_key_add: ["curtin", "in-target", "--", "apt-key", "add", "/tmp/maas-{{driver['package']}}.gpg"]
  driver_03_add: ["curtin", "in-target", "--", "add-apt-repository", "-y", "deb {{driver['repository']}} {{node.get_distro_series()}} main"]
  driver_04_update_install: ["curtin", "in-target", "--", "apt-get", "update", "--quiet"]
  driver_05_install: ["curtin", "in-target", "--", "apt-get", "-y", "install", "{{driver['package']}}"]
  driver_06_depmod: ["curtin", "in-target", "--", "depmod"]
  driver_07_update_initramfs: ["curtin", "in-target", "--", "update-initramfs", "-u"]
{{endif}}
  {{py: node_tags = '\\n'.join(node.tag_names())}}
  driver_09_write_tags: curtin in-target -- sh -c "printf '{{node_tags}}' > /opt/node_tags"
#  disable_reboot: touch /run/block-curtin-poweroff /tmp/block-poweroff /tmp/block-reboot
  driver_10_clone_repo: ["curtin", "in-target", "--", "git", "clone", "--config","http.proxy={{server_host}}:8000", "https://github.com/dhague/maas-k8s.git", "/opt/maas-k8s"]
{{if 'nvidiadriver' in (node.tag_names())}}  
  driver_11_disable_nouveau: curtin in-target -- sh -c "cat /opt/maas-k8s/modprobe-blacklist.conf >> /etc/modprobe.d/blacklist.conf"
  {{py: NVIDIA_VERSION = '375'}}
  {{py: CUDA_VERSION = '8.0.61-1'}}
  driver_12_install_nvidia: curtin in-target -- sh -c "export https_proxy=http://{{server_host}}:8000 && wget --directory-prefix=/tmp https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_{{CUDA_VERSION}}_amd64.deb && sudo dpkg -i /tmp/cuda-repo-ubuntu1604_{{CUDA_VERSION}}_amd64.deb && sudo apt-get update && sudo apt-get install -y nvidia-{{NVIDIA_VERSION}} nvidia-{{NVIDIA_VERSION}}-dev libcuda1-{{NVIDIA_VERSION}} nvidia-modprobe --no-install-recommends --allow-unauthenticated"
  # --allow-unauthenticated used above because the gpg key can't be got without figuring out how to use the proxy, and I am lazy.
{{endif}}  
showtrace: true
verbosity: 3

